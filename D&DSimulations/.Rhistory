interactive_map <- ggplotly(gg_map)
# Load necessary libraries
library(leaflet)
library(sf)
library(leaflet.extras)
library(plotly)
sf_data <- read_sf("shape-files/NamedTest/reconstructed_0.00Ma_polygon.shp")
# Create the base ggplot
gg_map <- ggplot() +
geom_sf(data = sf_data, color = "blue", fill = "lightblue", size = 0.5) +
theme_minimal() + # No background grid
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(), # Remove background
plot.margin = margin(0, 0, 0, 0) # Optional: removes any margin around the plot
)
# Convert ggplot to interactive plotly plot
interactive_map <- ggplotly(gg_map)
# Show the interactive plot
interactive_map
sf_data <- read_sf("shape-files/NamedTest/reconstructed_0.000Ma_polygon.shp")
# Create the base ggplot
gg_map <- ggplot() +
geom_sf(data = sf_data, color = "blue", fill = "lightblue", size = 0.5) +
theme_minimal() + # No background grid
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(), # Remove background
plot.margin = margin(0, 0, 0, 0) # Optional: removes any margin around the plot
)
# Convert ggplot to interactive plotly plot
interactive_map <- ggplotly(gg_map)
# Show the interactive plot
interactive_map
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
#Leaflet Trial with new custom shp files
# for loading our data
library(readr)
library(sf)
# for plotting
library(leaflet)
library(leaflet.extras)
# for more stuff
library(dbscan)
library(dplyr)
library(openrouteservice)
library(geosphere)
library(magrittr)
Temp <- read_sf("shape-files/NamedTest/reconstructed_0.00Ma_polygon.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
#chatgpt version of this. Let's hope it's not gonna be awful
# Load necessary libraries
library(leaflet)
library(sf)
library(leaflet.extras)
library(plotly)
# Read the shapefile (replace the path with your actual shapefile path)
sf_data <- read_sf("shape-files/NamedTest/reconstructed_0.000Ma_polygon.shp")
usa_1
Temp <- read_sf("shape-files/NamedTest2/Maain Border File i.shp")
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
#Leaflet Trial with new custom shp files
# for loading our data
library(readr)
library(sf)
# for plotting
library(leaflet)
library(leaflet.extras)
# for more stuff
library(dbscan)
library(dplyr)
library(openrouteservice)
library(geosphere)
library(magrittr)
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
nc <- sf::st_read(system.file("shape-files/NamedTest2/Main Border File i.shp", package = "sf"), quiet = TRUE)
ibrary(plotly)
library(plotly)
library(sf)
nc <- sf::st_read(system.file("shape-files/NamedTest2/Main Border File i.shp", package = "sf"), quiet = TRUE)
nc <- sf::st_read("shape-files/NamedTest2/Main Border File i.shp", package = "sf")
library(plotly)
library(sf)
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
fig <- plot_ly(nc)
fig
nc <- sf::st_read(system.file("shape-files/NamedTest2/Main Border File i.shp", package = "sf"), quiet = TRUE)
read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc)
fig
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc)
fig
View(penguins)
View(sf_data)
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp", layer = "kit")
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc)
fig
plot_ly()??
?? plot_ly()
fig <- plot_ly(nc, c("Test"))
fig
fig <- plot_ly(nc, "Test")
fig
fig <- plot_ly(nc, name = "Test")
fig
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc, name = c("Test","Test2"))
fig
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc, name = c("Test","Test2"))
fig
fig <- plot_ly(nc, name = "Test")
nc <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
fig <- plot_ly(nc, name = "Test")
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
# for loading our data
library(readr)
library(sf)
# for plotting
library(leaflet)
library(leaflet.extras)
# for more stuff
library(dbscan)
library(dplyr)
library(openrouteservice)
library(geosphere)
library(magrittr)
Temp <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, name = "Test")
fig
fig <- plot_ly(nc, name = c("test1", "test2"))
fig
fig <- plot_ly(nc, name = nc$PLATEID1)
fig
fig <- plot_ly(nc) +
borders(regions = nc$PLATEID1)
fig
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, aes(x = x, y = y, colour = group))
fig
fig <- plot_ly(nc, aes(x = x, y = y, colour = nc$PLATEID1))
fig
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, name = nc$NAME)
fig
fig <- plot_ly(nc, aes(x = x, y = y) name = nc$NAME)
fig
Temp <- read_sf("shape-files/NamedTest3/Main Border File .shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usd <- usa_2$data$NAME
getwd()
fig <- plot_ly(nc, aes(x = x, y = y), name = nc$NAME)
fig
fig <- plot_ly(nc, name = nc$NAME)
fig
fig <- plot_ly(nc)
fig
plot_geo(nc)
plot_mapbox(nc)
ggplot(nc) +geom_sf()
geom_sf() ??
geom_sf() ?
?geom_sf()
ggplot(nc, name = nc$NAME) +geom_sf()
ggplot(nc, name = nc$NAME)
plot_ly(nc, name = nc$NAME)
plot_ly(nc)
ggplot(nc)
ggplot(nc, name = nc$NAME) +geom_sf()
ggplot(nc, name = nc$NAME) +geom_sf(aes(fill= NAME))
plot_ly(nc) +
geom_sf(aes(fill= NAME))
fig <- plot_ly(nc, fill = NAME)
fig
fig <- plot_ly(nc, fill = nc$NAME)
fig
? plot_ly()
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
fig
install.packages("ggiraph")
library(ggiraph)
? geom_sf_interactive()
ggplotly(nc)
ggplotly(nc) +geom_sf()
? ggplotly()
fig <- ggplot(nc, name = nc$NAME) +geom_sf(aes(fill= NAME))
ggplotly(fig)
ggplotly(fig)
Temp <- read_sf("shape-files/Map Borders Original File Test1.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usd <- usa_2$data$NAME
Temp <- read_sf("shape-files/NamedTest/Main Border File i.shp")
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usd <- usa_2$data$NAME
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
ggplotly(nc) +geom_sf()
usa_2
ggplotly(nc) +geom_sf()
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, fill = region),
alpha = 0.4, color = "black"
)
usa_2
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
ggplotly(Temp) +geom_sf()
1 <- ggplotly() +geom_sf(Temp)
a <- ggplotly() +geom_sf(Temp)
usa_1
# for loading our data
library(readr)
library(sf)
# for plotting
library(leaflet)
library(leaflet.extras)
# for more stuff
library(dbscan)
library(dplyr)
library(openrouteservice)
library(geosphere)
library(magrittr)
Temp <- read_sf("shape-files/NamedTest2/Main Border File i.shp")
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black"
)
usa_2
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, color = "black",
inherit.aes = FALSE
)
usa_2
usa_2 <- ggplot() +
geom_polygon(
data = Temp,
aes(x = x, y = y, group = group, fill = region),
alpha = 0.4, colour = "black",
inherit.aes = FALSE
)
usa_2
sf
? sf
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, fill = nc$NAME, )
fig
nd <- read_sf("shape-files/Map Borders Original File Test1.shp")
fih <- plot_ly(nd, fill = nd$NAME, )
fih
nd <- read_sf("shape-files/Map Borders Original File Test1.shp")
fih <- plot_ly(nd, fill = nd$NAME, name = nd$NAME)
fih
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
fig
library(plotly)
library(sf)
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
fig
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
fig
fig <- plot_ly(nc, fill = nc$NAME)
fig
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
fig
fig <- plot_ly(nc, fill = nc$geometry, name = nc$NAME)
fig
getwd()
nc <- read_sf("/shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(nc, fill = nc$NAME, name = nc$NAME)
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
rlang::last_trace()
? plot_ly
fig <- plot_ly(data = nc, fill = nc$NAME, name = nc$NAME)
fig
nd <- read_sf("shape-files/Map Borders Original File Test1.shp")
fih <- ggplotly(nd, fill = nd$NAME, name = nd$NAME)
fih
fih <- plot_ly(nd, fill = nd$NAME, name = nd$NAME)
fih
nc <- read_sf("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(data = nc, fill = nc$NAME, name = nc$NAME)
View(fig)
nc <- st_read("shape-files/NamedTest3/Main Border File j.shp")
fig <- plot_ly(data = nc, fill = nc$NAME, name = nc$NAME)
fig
st_geometry_type(nc)
st_bbox(nc)
nc
ggplot() +
geom_sf(data = nc, size = 1.5 , color = "black",
fill = "cyan 1") +
ggtitle("nc outline") +
coord_sf()
suck <- ggplot() +
geom_sf(data = nc, size = 1.5 , color = "black",
fill = "cyan 1") +
ggtitle("nc outline") +
coord_sf()
plot_ly(suck)
suck <- ggplot() +
geom_sf(data = nd, size = 1.5 , color = "black",
fill = "cyan 1") +
ggtitle("nc outline") +
coord_sf()
plot_ly(suck)
suck <- ggplot() +
geom_sf(data = nd, size = 1.5 , color = "black",
fill = "cyan 1") +
ggtitle("nc outline") +
coord_sf()
suck
ggplotly(suck)
? ggplotly()
ggplotly(suck)
? ggplotly()
suck <- ggplot() +
geom_sf(data = nd, size = 1.5 , color = "black",
fill = nd$NAME) +
ggtitle("nc outline") +
coord_sf()
ggplotly(suck)
suck <- ggplot() +
geom_sf(data = nd, size = 1.5 , color = "black",
fill = nd$NAME) +
ggtitle("nc outline") +
coord_sf()
ggplotly(suck)
# From https://eric.clst.org/tech/usgeojson/ and
# https://en.wikipedia.org/wiki/List_of_United_States_counties_and_county_equivalents
nycounties <- sf::read_sf("https://rstudio.github.io/leaflet/json/nycounties.geojson")
pal <- colorNumeric("viridis", NULL)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
# From https://eric.clst.org/tech/usgeojson/ and
# https://en.wikipedia.org/wiki/List_of_United_States_counties_and_county_equivalents
nycounties <- sf::read_sf("https://rstudio.github.io/leaflet/json/nycounties.geojson")
pal <- colorNumeric("viridis", NULL)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
geojson_test <- read_file("GeoJson Files/Map Borders Original File Test1.geojson")
leaflet(geojson_test)
View(geojson_test)
leaflet(geojson_test) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)))
geojson_test <- read_sf("GeoJson Files/Map Borders Original File Test1.geojson")
leaflet(geojson_test) %>%
addTiles() %>%
addGeoJSON(geojson_test)
geojson_test <- read_file("GeoJson Files/Map Borders Original File Test1.geojson")
leaflet(geojson_test) %>%
addTiles() %>%
addGeoJSON(geojson_test)
leaflet(nycounties) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
leaflet(geojson_test) %>%
addGeoJSON(geojson_test)
? leaflet()
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
addMiniMap()
? addMiniMap()
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
addMiniMap(geojson_test, tiles = NULL)
? addMiniMap()
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
addMiniMap(geojson_test)
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
addMiniMap(tiles = NULL)
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
#  addMiniMap(tiles = NULL)
strings = list(hideText = "Hide MiniMap", showText = "Show MiniMap"),
leaflet(geojson_test) %>%
addGeoJSON(geojson_test) %>%
addMiniMap(strings = list(hideText = "Hide MiniMap", showText = "Show MiniMap"),)
